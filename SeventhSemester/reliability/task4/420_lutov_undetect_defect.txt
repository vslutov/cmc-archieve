GCC:

Ошибок не найдено.

CLANG:

Ошибок не найдено.

VALGRIND:

==4675== Memcheck, a memory error detector
==4675== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4675== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4675== Command: ./420_lutov_undetect_defect_sample
==4675==
==4675== Invalid read of size 1
==4675==    at 0x8048644: main (420_lutov_undetect_defect_sample.c:37)
==4675==  Address 0x4272170 is 8 bytes inside a block of size 12 free'd
==4675==    at 0x402B359: free (vg_replace_malloc.c:530)
==4675==    by 0x8048630: main (420_lutov_undetect_defect_sample.c:31)
==4675==  Block was alloc'd at
==4675==    at 0x402A2C2: malloc (vg_replace_malloc.c:299)
==4675==    by 0x80485C7: main (420_lutov_undetect_defect_sample.c:20)
==4675==
==4675== Invalid read of size 8
==4675==    at 0x8048652: main (420_lutov_undetect_defect_sample.c:35)
==4675==  Address 0x4272168 is 0 bytes inside a block of size 12 free'd
==4675==    at 0x402B359: free (vg_replace_malloc.c:530)
==4675==    by 0x8048630: main (420_lutov_undetect_defect_sample.c:31)
==4675==  Block was alloc'd at
==4675==    at 0x402A2C2: malloc (vg_replace_malloc.c:299)
==4675==    by 0x80485C7: main (420_lutov_undetect_defect_sample.c:20)
==4675==
Elements: 1.000000 aElements: 2.000000 bElements: 3.000000 cElements: 4.000000 dElements: 5.000000 eElements: 6.000000 fElements: 7.000000 gElements: 8.000000 hElements: 9.000000 iElements: 10.000000 j==4675==
==4675== HEAP SUMMARY:
==4675==     in use at exit: 0 bytes in 0 blocks
==4675==   total heap usage: 10 allocs, 10 frees, 120 bytes allocated
==4675==
==4675== All heap blocks were freed -- no leaks are possible
==4675==
==4675== For counts of detected and suppressed errors, rerun with: -v
==4675== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Мы видим, что имеет место обращение по освобожденному указателю.
Статический анализатор не может определить эти ошибки, потому что struct_arr_p[int] - это одна и та же синтаксическая еденица.
Если учитывать такие возможные утечки памяти, то анализатор будет выдавать очень много ложных срабатываний.

AEGIS:

Использование некорректного (INVALID) указателя char * struct_arr_p, i в выражении char D.2574 = *char * struct_arr_p, i (INI-03)
